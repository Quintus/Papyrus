% This ERB template takes the following variables:
% mod: The module or class (RDoc::ClassModule) to document
%
%<% if mod.module? %>
\module{<%= mod.latexized :full_name %>}\label{<%= mod.latex_label %>}
%<% else %>
\class{<%= mod.latexized :full_name %>}{<%= mod.latexized :superclass %>}\label{<%= mod.latex_label %>}
%<% end %>

<%= mod.description %>

\subsubsection*{Method list}

%<% mod.method_list.sort_by{|m| m.name}.each_with_index do |meth, i| %>
  <%= i == 0 ? "" : "," %> \hyperref[<%= meth.latex_label %>]{<%= meth.latexized :pretty_name %>}
%<% end %>
%
%<% unless mod.includes.empty? %>
\subsubsection*{Included Modules}
\begin{itemize}
%  <% mod.includes.sort_by{|i| i.name}.each do |inc| %>
\item \texttt{<%= inc.latexized :full_name %>}
%  <% end %>
\end{itemize}
%<% end %>

%<% consts = mod.constants.sort_by{|c| c.name} %>
%<% unless consts.empty? %>
\subsubsection*{Constants}

\begin{longtable}{p{0.3\textwidth}|p{0.2\textwidth}|p{0.4\textwidth}}
  \bfseries Name & \bfseries Value & \bfseries Description \\
  \hline
\endhead
%  <% consts.each do |const| %>
\label{<%= const.latex_label %>}%
\small{\code{<%= const.latexized :name %>}} & %
\small{\code{<%= const.latexized_value %>}} & %
<%= const.description %> \\
& & \\ %Empty row for readability
%  <%  end %>
\end{longtable}
%<% end %>

%<% unless mod.attributes.empty? %>
\subsubsection*{Attributes}
\begin{description}
%  <% mod.attributes.sort_by{|a| a.name}.each do |att| %>
\item[\texttt{<%= att.latexized :name %>}]
    \textsf{[<%= att.rw %>]} \label{<%= att.latex_label %>}<%= att.description %>
%  <% end %>
\end{description}
%<% end %>

%<% unless mod.aliases.empty? %>
\subsubsection*{Aliases}
\begin{itemize}
%  <% mod.aliases.sort_by{|a| a.name}.each do |al| %>
\item \texttt{<%= al.latexized :old_name %>} $\to$ \texttt{<%= al.latexized :new_name %>}
%  <% end %>
\end{itemize}
%<% end %>

%<% [["Public class methods", true, :public],
   ["Protected class methods", true, :protected],
   ["Private class methods", true, :private],
   ["Public instance methods", false, :public],
   ["Protected instance methods", false, :protected],
   ["Private instance methods", false, :private]].each do |caption, is_singleton, visibility| %>
% <% meths = mod.method_list.select{|m|m.singleton == is_singleton && m.visibility == visibility}.sort_by{|m| m.name}%>
%
% <% unless meths.empty? %>
\subsubsection*{<%= caption %>}
%   <% meths.each do |meth| %>
\method{<%= meth.latexized :pretty_name %>}
\label{<%= meth.latex_label %>}

\begin{Verbatim}
<%= meth.arglists %>
\end{Verbatim}

%     <% unless meth.aliases.empty? %>
\marginpar{\emph{Aliases: <%= meth.aliases.map{|m| "\\hyperref[#{m.latex_label}]{#{m.name}}"}.join(", ") %>}}
%     <% end %>
%     <% if meth.is_alias_for %>
\noindent \emph{Alias for \hyperref[<%= meth.latex_label %>]{<%= meth.is_alias_for.latexized :pretty_name %>}.}
%     <% else %>
\noindent <%= meth.description %>
%     <% end %>
%   <% end %>
% <% end %>
%<% end %>
